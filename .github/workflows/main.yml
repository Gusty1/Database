name: CoolPC Parser 自動執行與提交

on:
  schedule:
    - cron: '0 */1 * * *' # 每1小時執行一次 (UTC 時間)
  workflow_dispatch: # 允許手動觸發

jobs:
  run_parser_and_commit:
    runs-on: ubuntu-latest

    steps:
    - name: 檢查程式碼
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 需要完整的歷史記錄才能檢查檔案變動

    - name: 設定 Python 環境
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # 使用最新的 Python 3 版本

    - name: 安裝必要的 Python 模組
      run: |
        python -m pip install --upgrade pip
        # 根據您的 python 腳本，安裝 requests 和 beautifulsoup4
        pip install requests beautifulsoup4

    - name: 執行 CoolPC Parser 並直接輸出到目標資料夾
      # 直接將 product.json 輸出到 coolPC/ 資料夾內
      run: python3 coolPC/coolpc_parser.py --download --json coolPC/product.json

    - name: 清理暫存檔案
      # 您的腳本會產生一個 evaluate.html 暫存檔，執行完畢後將其刪除
      run: |
        if [ -f evaluate.html ]; then
          rm evaluate.html
          echo "已刪除暫存的 evaluate.html"
        else
          echo "找不到 evaluate.html，無需清理。"
        fi

    - name: 檢查並提交變更
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # 添加 coolPC 資料夾內的 product.json
        git add coolPC/product.json

        # 檢查是否有任何檔案變更
        if ! git diff-index --quiet HEAD; then
          git commit -m "Auto: 更新 coolPC/product.json"
          git push
        else
          echo "沒有新的變更需要推送到遠端。"
        fi
      if: success()
